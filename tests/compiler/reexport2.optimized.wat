(module
 (type $iii (func (param i32 i32) (result i32)))
 (type $v (func))
 (memory $0 0)
 (table 1 anyfunc)
 (elem (i32.const 0) $null)
 (global $reexport2/export2 i32 (i32.const 0))
 (global $export/a i32 (i32.const 1))
 (global $export/b i32 (i32.const 2))
 (global $export/c i32 (i32.const 3))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "export2" (global $reexport2/export2))
 (export "renamed_add_2" (func $export/add))
 (export "add" (func $export/add))
 (export "renamed_mul" (func $export/mul))
 (export "rerenamed_mul" (func $export/mul))
 (export "a" (global $export/a))
 (export "renamed_b" (global $export/b))
 (export "renamed_c" (global $export/c))
 (export "rerenamed_c" (global $export/c))
 (export "renamed_add" (func $export/add))
 (export "rerenamed_sub" (func $export/mul))
 (start $start)
 (func $export/add (; 0 ;) (; has Stack IR ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (get_local $0)
   (get_local $1)
  )
 )
 (func $export/mul (; 1 ;) (; has Stack IR ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.mul
   (get_local $0)
   (get_local $1)
  )
 )
 (func $start (; 2 ;) (; has Stack IR ;) (type $v)
  (drop
   (call $export/add
    (i32.const 1)
    (i32.const 2)
   )
  )
  (drop
   (call $export/mul
    (i32.const 3)
    (i32.const 4)
   )
  )
 )
 (func $null (; 3 ;) (; has Stack IR ;) (type $v)
  (nop)
 )
)
